name: Cargo Test (release nightly)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-nightly-

      - name: Prepare HPRC dataset
        run: |
          mkdir -p data/hprc
          if [ ! -f data/hprc/hprc-v2.0-mc-grch38.gbz ]; then
            curl -L \
              -o data/hprc/hprc-v2.0-mc-grch38.gbz \
              https://s3-us-west-2.amazonaws.com/human-pangenomics/pangenomes/freeze/release2/minigraph-cactus/hprc-v2.0-mc-grch38.gbz
          fi

      - name: Run tests
        run: cargo test --release
      
      - name: Test chr22 sequence extraction
        run: |
          cargo build --release
          mkdir -p sequences
          ./target/release/graphome make-sequence \
            --gfa data/hprc/hprc-v2.0-mc-grch38.gbz \
            --paf dummy.paf \
            --region chr22:1-50818468 \
            --sample HG002 \
            --output sequences/chr22
          
          # Verify output files were created
          ls -lh sequences/
          
          # Check that we got multiple haplotype sequences
          num_files=$(find sequences/ -name "*.fa" | wc -l)
          echo "Found $num_files FASTA files"
          
          # Expected chr22 length is ~50.8 MB
          # With graph structure, we expect 40-60 MB per haplotype
          EXPECTED_MIN_BP=40000000
          EXPECTED_MAX_BP=60000000
          
          # Verify files are not empty and have reasonable size
          for fa in sequences/*.fa; do
            file_size=$(stat -f%z "$fa" 2>/dev/null || stat -c%s "$fa")
            echo "File: $fa, Size: $file_size bytes"
            
            # Count actual base pairs (excluding header lines)
            bp_count=$(grep -v "^>" "$fa" | tr -d '\n' | wc -c)
            echo "  Base pairs: $bp_count"
            
            # Check file size
            if [ "$file_size" -lt 1000000 ]; then
              echo "ERROR: File $fa is too small ($file_size bytes), expected > 1MB"
              exit 1
            fi
            
            # Check base pair count is in reasonable range
            if [ "$bp_count" -lt "$EXPECTED_MIN_BP" ]; then
              echo "ERROR: File $fa has too few base pairs ($bp_count), expected > $EXPECTED_MIN_BP"
              echo "This suggests the sparse sampling bug is still present"
              exit 1
            fi
            
            if [ "$bp_count" -gt "$EXPECTED_MAX_BP" ]; then
              echo "WARNING: File $fa has more base pairs than expected ($bp_count > $EXPECTED_MAX_BP)"
              echo "This might indicate duplicate sequences or incorrect region"
            fi
            
            # Calculate coverage percentage
            coverage=$(awk "BEGIN {printf \"%.1f\", ($bp_count / 50818468.0) * 100}")
            echo "  Coverage: ${coverage}% of chr22 reference length"
            
            # Verify coverage is reasonable (should be 80-120% per haplotype)
            if (( $(echo "$coverage < 80" | bc -l) )); then
              echo "ERROR: Coverage too low (${coverage}%), expected > 80%"
              exit 1
            fi
          done
          
          echo "âœ“ Chr22 sequence extraction test passed"
